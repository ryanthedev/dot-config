#!/usr/bin/env bash

# 1) Get focused monitorâ€™s numeric ID
echo "DEBUG: Getting focused monitor ID..."
monitor_id=$(aerospace list-monitors --focused --json 2>&1 | jq -r '.[0]."monitor-id"')
echo "DEBUG: monitor_id = $monitor_id"

# 2) List all workspaces for that monitor (use --monitor)
echo "DEBUG: Listing workspaces for monitor $monitor_id..."
ws_json=$(aerospace list-workspaces --monitor "$monitor_id" --json 2>&1)
echo "DEBUG: raw ws_json = $ws_json"

workspaces=()
while IFS= read -r ws; do
  workspaces+=("$ws")
done < <(printf '%s\n' "$ws_json" | jq -r '.[].workspace')

echo "DEBUG: workspaces = ${workspaces[*]}"
num_ws=${#workspaces[@]}
echo "DEBUG: num_workspaces = $num_ws"
if [[ $num_ws -eq 0 ]]; then
  echo "ERROR: no workspaces found for monitor $monitor_id" >&2
  exit 1
fi

# 3) Find the currently focused workspace
echo "DEBUG: Listing focused workspace..."
cw_json=$(aerospace list-workspaces --focused --json 2>&1)
echo "DEBUG: raw cw_json = $cw_json"
current_ws=$(printf '%s\n' "$cw_json" | jq -r '.[0].workspace')
echo "DEBUG: current_ws = $current_ws"

# 4) Locate its index in the array
current_index=0
for i in "${!workspaces[@]}"; do
  if [[ "${workspaces[i]}" == "$current_ws" ]]; then
    current_index=$i
    break
  fi
done
echo "DEBUG: current_index = $current_index"

# 5) Compute previous index (wrap around)
prev_index=$(( (current_index - 1 + num_ws) % num_ws ))
echo "DEBUG: prev_index = $prev_index"

# 6) Switch to the previous workspace
echo "DEBUG: switching to workspace = ${workspaces[prev_index]}"
aerospace workspace "${workspaces[prev_index]}"
